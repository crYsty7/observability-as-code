name: Lint Packages

on:
  pull_request:
    types:
      - opened
      - synchronize
    branches:
      - main

jobs:
  lint-packages:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies for tools/integration
        run: npm ci
        working-directory: tools/integration

      - name: Install pkg globally
        run: npm install -g pkg

      - name: Download all pre-built stanctl-integration binaries
        run: |
          TAG_NAME="v1.0.0"
          echo "Downloading binaries..."
          curl -L "https://github.com/${{ github.repository }}/releases/download/${TAG_NAME}/stanctl-integration-linux" -o $HOME/stanctl-integration-linux
          curl -L "https://github.com/${{ github.repository }}/releases/download/${TAG_NAME}/stanctl-integration-macos" -o $HOME/stanctl-integration-macos
          curl -L "https://github.com/${{ github.repository }}/releases/download/${TAG_NAME}/stanctl-integration-win.exe" -o $HOME/stanctl-integration-win.exe
          chmod +x $HOME/stanctl-integration-linux $HOME/stanctl-integration-macos

      - name: Set Linter Binary Path
        run: |
          if [ "${{ runner.os }}" == "Linux" ]; then
            echo "LINTER_BINARY=$HOME/stanctl-integration-linux" >> $GITHUB_ENV
          elif [ "${{ runner.os }}" == "macOS" ]; then
            echo "LINTER_BINARY=$HOME/stanctl-integration-macos" >> $GITHUB_ENV
          elif [ "${{ runner.os }}" == "Windows" ]; then
            echo "LINTER_BINARY=$HOME/stanctl-integration-win.exe" >> $GITHUB_ENV
          else
            echo "Unsupported OS"
            exit 1
          fi

      - name: Get list of changed files
        id: get-changed-files
        run: |
          git fetch --all
          changed_files=$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }})
          echo "Changed files: $changed_files"
          echo "changed_files=$changed_files" >> $GITHUB_ENV

      - name: Lint packages
        run: |
          changed_files="${{ env.changed_files }}"

          for dir in packages/@instana-integration/*; do
            if [ -d "$dir" ]; then
              if echo "$changed_files" | grep -q "$dir/"; then  # Ensure we match directory paths correctly
                echo "Linting package: $dir"
                cd "$dir"
                ${{ env.LINTER_BINARY }} lint --debug --strict-mode
                cd -
              else
                echo "No changes in $dir, skipping lint"
              fi
            fi
          done
