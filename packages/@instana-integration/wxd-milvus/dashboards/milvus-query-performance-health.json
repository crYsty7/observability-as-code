{
  "id": "90TAES3PT7qRlr65L5fwoA",
  "title": "milvus-query-performance-health",
  "accessRules": [
    {
      "accessType": "READ",
      "relationType": "GLOBAL",
      "relatedId": ""
    }
  ],
  "widgets": [
    {
      "id": "pOF5Yon_qnpkwtRp",
      "title": "Data Processed ",
      "width": 12,
      "height": 13,
      "x": 0,
      "y": 41,
      "type": "chart",
      "config": {
        "shareMaxAxisDomain": false,
        "y1": {
          "formatter": "number.detailed",
          "renderer": "line",
          "metrics": [
            {
              "lastValue": false,
              "color": "",
              "compareToTimeShifted": false,
              "threshold": {
                "critical": "",
                "warning": "",
                "thresholdEnabled": false,
                "operator": ">="
              },
              "aggregation": "MEAN",
              "label": "proxy insert vectors count",
              "source": "INFRASTRUCTURE_METRICS",
              "metricPath": [
                "Others",
                "Regex"
              ],
              "formatter": "number.detailed",
              "unit": "number",
              "regex": true,
              "metric": "metrics\\.sums\\.github\\.com/open-telemetry/opentelemetry-collector-contrib/receiver/prometheusreceiver/milvus_proxy_insert_vectors_count",
              "timeShift": 0,
              "tagFilterExpression": {
                "logicalOperator": "AND",
                "elements": [],
                "type": "EXPRESSION"
              },
              "allowedCrossSeriesAggregations": [],
              "metricLabel": "metrics\\.sums\\.github\\.com/open-telemetry/opentelemetry-collector-contrib/receiver/prometheusreceiver/milvus_proxy_insert_vectors_count",
              "crossSeriesAggregation": "MEAN"
            },
            {
              "lastValue": false,
              "color": "",
              "compareToTimeShifted": false,
              "threshold": {
                "critical": "",
                "warning": "",
                "thresholdEnabled": false,
                "operator": ">="
              },
              "aggregation": "MEAN",
              "label": "proxy search vectors count",
              "source": "INFRASTRUCTURE_METRICS",
              "metricPath": [
                "Others",
                "Regex"
              ],
              "formatter": "number.detailed",
              "unit": "number",
              "regex": true,
              "metric": "metrics\\.sums\\.github\\.com/open-telemetry/opentelemetry-collector-contrib/receiver/prometheusreceiver/milvus_proxy_search_vectors_count",
              "timeShift": 0,
              "tagFilterExpression": {
                "logicalOperator": "AND",
                "elements": [],
                "type": "EXPRESSION"
              },
              "allowedCrossSeriesAggregations": [],
              "metricLabel": "metrics\\.sums\\.github\\.com/open-telemetry/opentelemetry-collector-contrib/receiver/prometheusreceiver/milvus_proxy_search_vectors_count",
              "crossSeriesAggregation": "MEAN"
            }
          ],
          "formatterSelected": false
        },
        "y2": {
          "formatter": "number.detailed",
          "renderer": "line",
          "metrics": []
        },
        "type": "TIME_SERIES"
      }
    },
    {
      "id": "901LaYyNHIH5MuqY",
      "title": "Requests Count",
      "width": 12,
      "height": 13,
      "x": 0,
      "y": 28,
      "type": "chart",
      "config": {
        "shareMaxAxisDomain": false,
        "y1": {
          "formatter": "number.detailed",
          "renderer": "line",
          "metrics": [
            {
              "lastValue": false,
              "color": "",
              "compareToTimeShifted": false,
              "threshold": {
                "critical": "",
                "warning": "",
                "thresholdEnabled": false,
                "operator": ">="
              },
              "aggregation": "MEAN",
              "label": "proxy request count",
              "source": "INFRASTRUCTURE_METRICS",
              "metricPath": [
                "Others",
                "Regex"
              ],
              "formatter": "number.detailed",
              "unit": "number",
              "regex": true,
              "metric": "metrics\\.sums\\.github\\.com/open-telemetry/opentelemetry-collector-contrib/receiver/prometheusreceiver/milvus_proxy_req_count",
              "timeShift": 0,
              "tagFilterExpression": {
                "logicalOperator": "AND",
                "elements": [],
                "type": "EXPRESSION"
              },
              "allowedCrossSeriesAggregations": [],
              "metricLabel": "metrics\\.sums\\.github\\.com/open-telemetry/opentelemetry-collector-contrib/receiver/prometheusreceiver/milvus_proxy_req_count",
              "crossSeriesAggregation": "MEAN"
            }
          ],
          "formatterSelected": false
        },
        "y2": {
          "formatter": "number.detailed",
          "renderer": "line",
          "metrics": []
        },
        "type": "TIME_SERIES"
      }
    },
    {
      "id": "Negblsj3NB1ekVkA",
      "title": "No of concurrent reads",
      "width": 12,
      "height": 13,
      "x": 0,
      "y": 54,
      "type": "chart",
      "config": {
        "shareMaxAxisDomain": false,
        "y1": {
          "formatter": "number.detailed",
          "renderer": "line",
          "metrics": [
            {
              "lastValue": false,
              "color": "",
              "compareToTimeShifted": false,
              "threshold": {
                "critical": "",
                "warning": "",
                "thresholdEnabled": false,
                "operator": ">="
              },
              "aggregation": "MEAN",
              "label": "querynode read task concurrency",
              "source": "INFRASTRUCTURE_METRICS",
              "metricPath": [
                "Others",
                "Regex"
              ],
              "formatter": "number.detailed",
              "unit": "number",
              "regex": true,
              "metric": "metrics\\.gauges\\.github\\.com/open-telemetry/opentelemetry-collector-contrib/receiver/prometheusreceiver/milvus_querynode_read_task_concurrency",
              "timeShift": 0,
              "tagFilterExpression": {
                "logicalOperator": "AND",
                "elements": [],
                "type": "EXPRESSION"
              },
              "allowedCrossSeriesAggregations": [],
              "metricLabel": "metrics\\.gauges\\.github\\.com/open-telemetry/opentelemetry-collector-contrib/receiver/prometheusreceiver/milvus_querynode_read_task_concurrency",
              "crossSeriesAggregation": "MEAN"
            }
          ],
          "formatterSelected": false
        },
        "y2": {
          "formatter": "number.detailed",
          "renderer": "line",
          "metrics": []
        },
        "type": "TIME_SERIES"
      }
    }
  ],
  "ownerId": "67dc0ee04bdbcf000124598d",
  "writable": true
}